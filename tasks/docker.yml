---
- name: ensure dockerfile directories exist
  file:
    path: "{{ item }}"
    owner: "{{ ansible_ssh_user }}"
    state: directory
  with_items:
    - "{{ ansible_env.PWD }}/.ansible_cache"
    - "{{ ansible_env.PWD }}/.ansible_cache/docker"

- name: synchronize role to remote cache for Dockerfile build
  synchronize:
    src: ../
    dest: "{{ ansible_env.PWD }}/.ansible_cache/docker/keystone"
    archive: no
    checksum: yes
    recursive: yes

- name: ensure docker image configuration directory exists
  file:
    path: "{{ item }}"
    owner: "{{ ansible_ssh_user }}"
    state: directory
  with_items:
    - "{{ ansible_env.PWD }}/.ansible_cache/docker/keystone/playbooks/group_vars"

- name: update configuration used to build docker image from template
  template:
    src: ansible_cache/docker/keystone/playbooks/group_vars/all.yml
    owner: "{{ ansible_ssh_user }}"
    dest: "{{ ansible_env.PWD }}/.ansible_cache/docker/keystone/playbooks/group_vars/all.yml"

- name: ensure keystone docker image has been built
  docker_image:
    name: "{{ keystone_docker_username }}/{{ keystone_docker_imagename }}"
    path: "{{ ansible_env.PWD }}/.ansible_cache/docker/keystone"
    state: present

- name: ensure keystone data container exists
  docker:
    image: "{{ keystone_docker_username }}/{{ keystone_docker_imagename }}"
    name: "{{ keystone_docker_containername }}_data"
    command: >
      ansible-playbook 
        -i inventories/local.ini playbooks/offline_configuration.yml -e '{ 
          "keystone_identity_admin_token" : "{{ keystone_identity_admin_token }}",
          "keystone_log_dir" : "{{ keystone_log_dir }}",
          "keystone_log_verbose" : "{{ keystone_log_verbose }}",
          "keystone_log_debug" : "{{ keystone_log_debug }}",
          "keystone_mysql_host" : "{{ keystone_mysql_host }}",
          "keystone_mysql_port" : "{{ keystone_mysql_port }}",
          "keystone_mysql_keystone_password" : 
            "{{ keystone_mysql_keystone_password }}",
          "keystone_docker_host" : "{{ ansible_docker0['ipv4']['address'] }}" }'
    detach: no
    state: present

- name: wait until offline configuration is completed
  command: docker wait "{{ keystone_docker_containername }}_data"
  register: docker_wait
  changed_when: false

- name: collect offline configuration log
  command: docker logs "{{ keystone_docker_containername }}_data"
  register: offline_configuration_log
  changed_when: false

- name: display offline configuration log
  debug:
    msg: "{{ offline_configuration_log.stdout_lines }}"

- name: fail on offline configuration failure
  assert:
    that: docker_wait.stdout == "0"

- name: ensure keystone service is running
  docker:
    image: "{{ keystone_docker_username }}/{{ keystone_docker_imagename }}"
    name: "{{ keystone_docker_containername }}_server"
    volumes_from: "{{ keystone_docker_containername }}_data"
    ports: 
      - 5000:5000
      - 35357:35357
    detach: yes
    state: running

