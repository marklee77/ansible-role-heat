---
- name: ensure dockerfile directories exist
  file:
    path: "{{ item }}"
    owner: "{{ ansible_ssh_user }}"
    mode: 0700
    state: directory
  with_items:
    - "{{ ansible_env.PWD }}/.ansible_cache"
    - "{{ ansible_env.PWD }}/.ansible_cache/docker"

- name: synchronize role to remote cache for Dockerfile build
  synchronize:
    src: ../
    dest: "{{ ansible_env.PWD }}/.ansible_cache/docker/keystone"
    links: yes
    delete: yes

- name: ensure keystone docker image has been built
  docker_image:
    name: "{{ keystone_docker_username }}/keystone"
    path: "{{ ansible_env.PWD }}/.ansible_cache/docker/keystone"
    state: present

- name: ensure keystone data container exists
  docker:
    image: "{{ keystone_docker_username }}/{{ keystone_docker_imagename }}"
    name: "{{ keystone_docker_containername }}_data"
    command: >
      ansible-playbook -i inventories/local.ini deploy.yml -e '{ 
        "keystone_dockerize_context" : "offline_configuration", 
        "keystone_identity_admin_token" : "{{ keystone_identity_admin_token }}",
        "keystone_log_dir" : "{{ keystone_log_dir }}",
        "keystone_log_verbose" : "{{ keystone_log_verbose }}",
        "keystone_log_debug" : "{{ keystone_log_debug }}",
        "keystone_mysql_host" : "{{ keystone_mysql_host }}",
        "keystone_mysql_port" : "{{ keystone_mysql_port }}",
        "keystone_mysql_keystone_password" : 
          "{{ keystone_mysql_keystone_password }}" }'
    detach: no
    state: present

- name: wait until offline configuration is completed
  command: docker wait "{{ keystone_docker_containername }}_data"
  register: docker_wait
  changed_when: false
  failed_when: docker_wait.stdout != "0"

- name: ensure keystone service is running
  docker:
    image: "{{ keystone_docker_username }}/{{ keystone_docker_imagename }}"
    name: "{{ keystone_docker_containername }}_server"
    volumes_from: "{{ keystone_docker_containername }}_data"
    ports: 
      - 5000:5000
      - 35357:35357
    detach: yes
    state: running

#- name: perform keystone docker online configuration
#  docker:
#    image: "{{ keystone_docker_username }}/{{ keystone_docker_imagename }}"
#    name: "{{ keystone_docker_containername }}_configure"
#    volumes_from: "{{ keystone_docker_containername }}_data"
#    detach: no
#    command: >
#      ansible-playbook -i inventories/local.ini deploy.yml -e '{
#        "keystone_dockerize_context" : "online_configuration",
#        "keystone_identity_endpoint_host" : 
#          "{{ ansible_docker0['ipv4']['address'] }}",
#        "keystone_identity_admin_token" : "{{ keystone_identity_admin_token }}", 
#        "keystone_identity_admin_password" :
#          "{{ keystone_identity_admin_password }}" }'
#    state: present

#- name: wait until online configuration is completed
#  command: docker wait "{{ keystone_docker_containername }}_configure"
#  register: docker_wait
#  changed_when: false
#  failed_when: docker_wait.stdout != "0"

